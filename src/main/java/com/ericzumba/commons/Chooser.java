package com.ericzumba.commons;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;

import static java.util.Arrays.asList;
import static java.util.Collections.unmodifiableList;
import static java.util.Optional.ofNullable;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'ericzumba' at '11/10/16 12:13 AM' with Gradle 3.1
 *
 * @author ericzumba, @date 11/10/16 12:13 AM
 */
public class Chooser<A, B> {

    private final Function<A, B> first;
    private final Function<B, Function<A, B>>  next;
    private Map<Integer, Function<A, B>> knowledge;

    public Chooser(Function<A, B> first,
                   Function<B, Function<A, B>> next,
                   Map<Integer, Function<A, B>> knowledge) {
        this.first = first;
        this.next = next;
        this.knowledge = knowledge;
    }

    public B choose(A request) {
        B resp = ofNullable(knowledge.get(request.hashCode()))
                .orElse(first)
                .apply(request);

        knowledge.put(request.hashCode(), next.apply(resp));

        return resp;
    }
}